{"version":3,"sources":["webpack:///./src/components/link.js","webpack:///./src/pages/index.js"],"names":["linkQuery","Link","noMargin","query","render","data","social","site","siteMetadata","style","display","marginTop","rhythm","marginBottom","target","rel","href","twitter","github","weibo","zhihu","BlogIndex","this","props","siteTitle","title","posts","allMarkdownRemark","edges","location","keywords","map","node","frontmatter","fields","slug","key","boxShadow","to","date","timeToRead","dangerouslySetInnerHTML","__html","description","excerpt","React","Component"],"mappings":"2FAAA,iDAgFA,IAAMA,EAAS,aAgBAC,IA5Ff,YAA6B,IAAbC,EAAY,EAAZA,SACd,OACE,kBAAC,cAAD,CACEC,MAAOH,EACPI,OAAQ,SAAAC,GAAS,IACPC,EAAWD,EAAKE,KAAKC,aAArBF,OACR,OACE,yBACEG,MAAO,CACLC,QAAQ,OACRC,UAAWT,EAAW,EAAIU,YAAO,GACjCC,aAAcX,EAAW,EAAIU,YAAO,KAGtC,2BACE,uBACEE,OAAO,SACPC,IAAI,sBACJC,KAAI,uBAAyBV,EAAOW,SAHtC,WAOC,KACD,uBACEH,OAAO,SACPC,IAAI,sBACJC,KAAI,sBAAwBV,EAAOY,QAHrC,UAeC,KACD,uBACEJ,OAAO,SACPC,IAAI,sBACJC,KAAI,qBAAuBV,EAAOa,OAHpC,SAOC,KACD,uBACEL,OAAO,SACPC,IAAI,sBACJC,KAAI,gCAAkCV,EAAOc,OAH/C,SAMK,IAQL,uBACEN,OAAO,SACPC,IAAI,sBACJC,KAAK,iCAHP,gB,0ICzDRK,E,kGACJjB,OAAA,WAAU,IACAC,EAASiB,KAAKC,MAAdlB,KACFmB,EAAYnB,EAAKE,KAAKC,aAAaiB,MACnCC,EAAQrB,EAAKsB,kBAAkBC,MAErC,OACE,kBAAC,IAAD,CAAQC,SAAUP,KAAKC,MAAMM,SAAUJ,MAAOD,GAC5C,kBAAC,IAAD,CAAKC,MAAM,YAAYK,SAAU,CAAC,SAAD,UACjC,kBAAC,IAAD,MACCJ,EAAMK,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACNP,EAAQO,EAAKC,YAAYR,OAASO,EAAKE,OAAOC,KACpD,OACE,yBAAKC,IAAKJ,EAAKE,OAAOC,MACpB,wBACE1B,MAAO,CACLI,aAAc,IAGhB,kBAAC,OAAD,CAAMJ,MAAO,CAAE4B,UAAU,QAAWC,GAAIN,EAAKE,OAAOC,MACjDV,IAGL,+BAAQO,EAAKC,YAAYM,MACzB,+BACG,MACAP,EAAKQ,WAFR,MAIA,uBACEC,wBAAyB,CACvBC,OAAQV,EAAKC,YAAYU,aAAeX,EAAKY,eAMvD,kBAAC,IAAD,Q,GApCgBC,IAAMC,WA0CfzB","file":"component---src-pages-index-js-16af23ef54fc3ee0ff93.js","sourcesContent":["import React from \"react\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport { rhythm } from \"../utils/typography\"\n\nfunction Link({ noMargin }) {\n  return (\n    <StaticQuery\n      query={linkQuery}\n      render={data => {\n        const { social } = data.site.siteMetadata\n        return (\n          <div\n            style={{\n              display: `flex`,\n              marginTop: noMargin ? 0 : rhythm(3),\n              marginBottom: noMargin ? 0 : rhythm(2),\n            }}\n          >\n            <p>\n              <a\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                href={`https://twitter.com/${social.twitter}`}\n              >\n                Twitter\n              </a>\n              {\"  \"}\n              <a\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                href={`https://github.com/${social.github}`}\n              >\n                Github\n              </a>\n              {/* {\"  \"}\n              <a\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                href={`https://instagram.com/${social.ins}`}\n              >\n                Ins\n              </a> */}\n              {\"  \"}\n              <a\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                href={`https://weibo.com/${social.weibo}`}\n              >\n                Weibo\n              </a>\n              {\"  \"}\n              <a\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                href={`https://www.zhihu.com/people/${social.zhihu}`}\n              >\n                Zhihu\n              </a>{\" \"}\n              {/* <a\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                href=\"https://www.linkedin.com/in/liqinshuo\"\n              >\n                Linkedin\n              </a>{\" \"} */}\n              <a\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                href=\"mailto:liqinshuo469@gmail.com\"\n              >\n                email\n              </a>\n            </p>\n          </div>\n        )\n      }}\n    />\n  )\n}\n\nconst linkQuery = graphql`\n  query LinkQuery {\n    site {\n      siteMetadata {\n        social {\n          twitter\n          github\n          weibo\n          ins\n          zhihu\n        }\n      }\n    }\n  }\n`\n\nexport default Link\n","import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport LINK from \"../components/link\"\n\nclass BlogIndex extends React.Component {\n  render() {\n    const { data } = this.props\n    const siteTitle = data.site.siteMetadata.title\n    const posts = data.allMarkdownRemark.edges\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO title=\"All posts\" keywords={[`lqs469`, `blog`]} />\n        <Bio />\n        {posts.map(({ node }) => {\n          const title = node.frontmatter.title || node.fields.slug\n          return (\n            <div key={node.fields.slug}>\n              <h3\n                style={{\n                  marginBottom: 0,\n                }}\n              >\n                <Link style={{ boxShadow: `none` }} to={node.fields.slug}>\n                  {title}\n                </Link>\n              </h3>\n              <small>{node.frontmatter.date}</small>\n              <small>\n                {\" â€§ \"}\n                {node.timeToRead} '\n              </small>\n              <p\n                dangerouslySetInnerHTML={{\n                  __html: node.frontmatter.description || node.excerpt,\n                }}\n              />\n            </div>\n          )\n        })}\n        <LINK />\n      </Layout>\n    )\n  }\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      sort: { order: DESC, fields: [frontmatter___date] }\n      filter: {\n        frontmatter: {\n          hide: {\n            ne: 1\n          }\n          categories: {\n            ne: \"stuff\"\n          }\n        }\n      }\n    ) {\n      edges {\n        node {\n          excerpt(pruneLength: 130)\n          fields {\n            slug\n          }\n          timeToRead\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            categories\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}