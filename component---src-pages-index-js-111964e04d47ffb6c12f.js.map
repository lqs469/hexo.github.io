{"version":3,"sources":["webpack:///./src/components/project.js","webpack:///./src/components/link.js","webpack:///./src/pages/index.js","webpack:///./node_modules/_core-js@2.6.11@core-js/modules/es6.string.link.js"],"names":["projectQuery","Project","query","render","data","projects","allMarkdownRemark","edges","TitleStyle","fontWeight","boxShadow","style","map","node","title","frontmatter","fields","slug","key","marginBottom","rhythm","link","href","target","rel","to","dangerouslySetInnerHTML","__html","description","linkQuery","Link","noMargin","social","site","siteMetadata","display","marginTop","twitter","github","ins","weibo","zhihu","BlogIndex","componentWillMount","document","body","className","localStorage","getItem","this","props","siteTitle","posts","location","keywords","date","timeToRead","excerpt","React","Component","pageQuery","createHTML","url"],"mappings":"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","file":"component---src-pages-index-js-111964e04d47ffb6c12f.js","sourcesContent":["import React from \"react\"\nimport { StaticQuery, Link, graphql } from \"gatsby\"\nimport { rhythm } from \"../utils/typography\"\n\nfunction Project() {\n  return (\n    <StaticQuery\n      query={projectQuery}\n      render={data => {\n        const projects = data.allMarkdownRemark.edges\n        const TitleStyle = {\n          fontWeight: \"bold\",\n          boxShadow: `none`,\n        }\n\n        return (\n          <div style={{}}>\n            {projects.map(({ node }) => {\n              const title = node.frontmatter.title || node.fields.slug\n\n              return (\n                <div\n                  key={node.fields.slug}\n                  style={{\n                    marginBottom: rhythm(1),\n                  }}\n                >\n                  <span>\n                    {node.frontmatter.link ? (\n                      <a\n                        style={TitleStyle}\n                        href={node.frontmatter.link}\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                      >\n                        {title}\n                      </a>\n                    ) : (\n                      <Link style={TitleStyle} to={node.fields.slug}>\n                        {title}\n                      </Link>\n                    )}\n                  </span>\n                  <br />\n                  <span\n                    dangerouslySetInnerHTML={{\n                      __html: node.frontmatter.description,\n                    }}\n                  />\n                </div>\n              )\n            })}\n          </div>\n        )\n      }}\n    />\n  )\n}\n\nconst projectQuery = graphql`\n  query projectQuery {\n    allMarkdownRemark(\n      sort: { order: ASC, fields: [frontmatter___index] }\n      filter: { frontmatter: { categories: { regex: \"/stuff/\" } } }\n    ) {\n      edges {\n        node {\n          excerpt(pruneLength: 100)\n          fields {\n            slug\n          }\n          timeToRead\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            categories\n            description\n            link\n            index\n          }\n        }\n      }\n    }\n  }\n`\n\nexport default Project\n","import React from \"react\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport { rhythm } from \"../utils/typography\"\n\nfunction Link({ noMargin }) {\n  return (\n    <StaticQuery\n      query={linkQuery}\n      render={data => {\n        const { social } = data.site.siteMetadata\n        return (\n          <div\n            style={{\n              display: `flex`,\n              marginTop: noMargin ? 0 : rhythm(3),\n              marginBottom: noMargin ? 0 : rhythm(2),\n            }}\n          >\n            <p>\n              <a\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                href={`https://twitter.com/${social.twitter}`}\n              >\n                Twitter\n              </a>\n              {\"  \"}\n              <a\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                href={`https://github.com/${social.github}`}\n              >\n                Github\n              </a>\n              {\"  \"}\n              <a\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                href={`https://instagram.com/${social.ins}`}\n              >\n                Ins\n              </a>\n              {\"  \"}\n              <a\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                href={`https://weibo.com/${social.weibo}`}\n              >\n                Weibo\n              </a>\n              {\"  \"}\n              <a\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                href={`https://www.zhihu.com/people/${social.zhihu}`}\n              >\n                Zhihu\n              </a>{\" \"}\n              <a\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                href=\"https://www.linkedin.com/in/liqinshuo\"\n              >\n                Linkedin\n              </a>{\" \"}\n              <a\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                href=\"mailto:liqinshuo469@gmail.com\"\n              >\n                Contact\n              </a>\n            </p>\n          </div>\n        )\n      }}\n    />\n  )\n}\n\nconst linkQuery = graphql`\n  query LinkQuery {\n    site {\n      siteMetadata {\n        social {\n          twitter\n          github\n          weibo\n          ins\n          zhihu\n        }\n      }\n    }\n  }\n`\n\nexport default Link\n","import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport LINK from \"../components/link\"\nimport Project from \"../components/project\"\n\nclass BlogIndex extends React.Component {\n  componentWillMount() {\n    document.body.className =\n      localStorage.getItem(\"__THEME__\") === \"dark\" ? \"dark\" : \"light\"\n  }\n\n  render() {\n    const { data } = this.props\n    const siteTitle = data.site.siteMetadata.title\n    const posts = data.allMarkdownRemark.edges\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO title=\"All posts\" keywords={[`lqs469`, `blog`]} />\n        <Bio />\n        {posts.map(({ node }) => {\n          const title = node.frontmatter.title || node.fields.slug\n          return (\n            <div key={node.fields.slug}>\n              <h3\n                style={{\n                  marginBottom: 0,\n                }}\n              >\n                <Link style={{ boxShadow: `none` }} to={node.fields.slug}>\n                  {title}\n                </Link>\n              </h3>\n              <small>{node.frontmatter.date}</small>\n              <small>\n                {\" ‧ \"}\n                {node.timeToRead} '\n              </small>\n              <p\n                dangerouslySetInnerHTML={{\n                  __html: node.frontmatter.description || node.excerpt,\n                }}\n              />\n            </div>\n          )\n        })}\n        <LINK />\n      </Layout>\n    )\n  }\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      sort: { order: DESC, fields: [frontmatter___date] }\n      filter: { frontmatter: { categories: { regex: \"/.*路/\" } } }\n    ) {\n      edges {\n        node {\n          excerpt(pruneLength: 100)\n          fields {\n            slug\n          }\n          timeToRead\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            categories\n          }\n        }\n      }\n    }\n  }\n`\n","'use strict';\n// B.2.3.10 String.prototype.link(url)\nrequire('./_string-html')('link', function (createHTML) {\n  return function link(url) {\n    return createHTML(this, 'a', 'href', url);\n  };\n});\n"],"sourceRoot":""}