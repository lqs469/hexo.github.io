{"version":3,"sources":["webpack:///./src/components/project.js","webpack:///./src/pages/index.js","webpack:///./node_modules/_core-js@2.6.11@core-js/modules/es6.string.link.js"],"names":["projectQuery","Project","query","render","data","projects","allMarkdownRemark","edges","TitleStyle","fontWeight","boxShadow","style","map","node","title","frontmatter","fields","slug","key","marginBottom","link","href","target","rel","to","dangerouslySetInnerHTML","__html","description","BlogIndex","this","props","siteTitle","site","siteMetadata","posts","location","keywords","date","timeToRead","excerpt","React","Component","pageQuery","createHTML","url"],"mappings":"mMA2DA,IAAMA,EAAY,YA2BHC,EAjFf,WACE,OACE,kBAAC,cAAD,CACEC,MAAOF,EACPG,OAAQ,SAAAC,GACN,IAAMC,EAAWD,EAAKE,kBAAkBC,MAClCC,EAAa,CAEjBC,WAAY,OACZC,UAAU,QAGZ,OACE,yBAAKC,MAAO,IACTN,EAASO,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACTC,EAAQD,EAAKE,YAAYD,OAASD,EAAKG,OAAOC,KAEpD,OACE,yBAAKC,IAAKL,EAAKG,OAAOC,MACpB,0BACEN,MAAO,CACLQ,aAAc,IAGfN,EAAKE,YAAYK,KAChB,uBACET,MAAOH,EACPa,KAAMR,EAAKE,YAAYK,KACvBE,OAAO,SACPC,IAAI,uBAEHT,GAGH,kBAAC,OAAD,CAAMH,MAAOH,EAAYgB,GAAIX,EAAKG,OAAOC,MACtCH,IAGC,IACR,0BACEW,wBAAyB,CACvBC,OAAQb,EAAKE,YAAYY,qBAvC3C,U,8CCCEC,E,gLACJzB,OAAA,WAAU,IACAC,EAASyB,KAAKC,MAAd1B,KACF2B,EAAY3B,EAAK4B,KAAKC,aAAanB,MACnCoB,EAAQ9B,EAAKE,kBAAkBC,MAErC,OACE,kBAAC,IAAD,CAAQ4B,SAAUN,KAAKC,MAAMK,SAAUrB,MAAOiB,GAC5C,kBAAC,IAAD,CAAKjB,MAAM,YAAYsB,SAAU,CAAC,SAAD,UACjC,kBAAC,IAAD,MACA,oCACCF,EAAMtB,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACNC,EAAQD,EAAKE,YAAYD,OAASD,EAAKG,OAAOC,KACpD,OACE,yBAAKC,IAAKL,EAAKG,OAAOC,MACpB,wBACEN,MAAO,CACLQ,aAAc,IAGhB,kBAAC,OAAD,CAAMR,MAAO,CAAED,UAAU,QAAWc,GAAIX,EAAKG,OAAOC,MACjDH,IAGL,+BAAQD,EAAKE,YAAYsB,MACzB,+BACG,MACAxB,EAAKyB,WAFR,MAIA,uBACEb,wBAAyB,CACvBC,OAAQb,EAAKE,YAAYY,aAAed,EAAK0B,eAMvD,uCACA,kBAAC,EAAD,Q,GAtCgBC,IAAMC,WA8CjBC,GAFEd,YAEO,c,kCCpDtB,EAAQ,OAAR,CAA0B,QAAQ,SAAUe,GAC1C,OAAO,SAAcC,GACnB,OAAOD,EAAWd,KAAM,IAAK,OAAQe,Q","file":"component---src-pages-index-js-ee556e77bcfad77611a1.js","sourcesContent":["import React from \"react\"\nimport { StaticQuery, Link, graphql } from \"gatsby\"\n\n// import { rhythm } from \"../utils/typography\"\n\nfunction Project() {\n  return (\n    <StaticQuery\n      query={projectQuery}\n      render={data => {\n        const projects = data.allMarkdownRemark.edges\n        const TitleStyle = {\n          // fontSize: rhythm(0.75),\n          fontWeight: \"bold\",\n          boxShadow: `none`,\n        }\n\n        return (\n          <div style={{}}>\n            {projects.map(({ node }) => {\n              const title = node.frontmatter.title || node.fields.slug\n\n              return (\n                <div key={node.fields.slug}>\n                  <span\n                    style={{\n                      marginBottom: 0,\n                    }}\n                  >\n                    {node.frontmatter.link ? (\n                      <a\n                        style={TitleStyle}\n                        href={node.frontmatter.link}\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                      >\n                        {title}\n                      </a>\n                    ) : (\n                      <Link style={TitleStyle} to={node.fields.slug}>\n                        {title}\n                      </Link>\n                    )}\n                  </span>{\" \"}\n                  <span\n                    dangerouslySetInnerHTML={{\n                      __html: node.frontmatter.description,\n                    }}\n                  />\n                </div>\n              )\n            })}\n          </div>\n        )\n      }}\n    />\n  )\n}\n\nconst projectQuery = graphql`\n  query projectQuery {\n    allMarkdownRemark(\n      sort: { order: ASC, fields: [frontmatter___index] }\n      filter: { frontmatter: { categories: { regex: \"/stuff/\" } } }\n    ) {\n      edges {\n        node {\n          excerpt(pruneLength: 100)\n          fields {\n            slug\n          }\n          timeToRead\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            categories\n            description\n            link\n            index\n          }\n        }\n      }\n    }\n  }\n`\n\nexport default Project\n","import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport Project from \"../components/project\"\n\nclass BlogIndex extends React.Component {\n  render() {\n    const { data } = this.props\n    const siteTitle = data.site.siteMetadata.title\n    const posts = data.allMarkdownRemark.edges\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO title=\"All posts\" keywords={[`lqs469`, `blog`]} />\n        <Bio />\n        <h2>Post</h2>\n        {posts.map(({ node }) => {\n          const title = node.frontmatter.title || node.fields.slug\n          return (\n            <div key={node.fields.slug}>\n              <h3\n                style={{\n                  marginBottom: 0,\n                }}\n              >\n                <Link style={{ boxShadow: `none` }} to={node.fields.slug}>\n                  {title}\n                </Link>\n              </h3>\n              <small>{node.frontmatter.date}</small>\n              <small>\n                {\" ‧ \"}\n                {node.timeToRead} '\n              </small>\n              <p\n                dangerouslySetInnerHTML={{\n                  __html: node.frontmatter.description || node.excerpt,\n                }}\n              />\n            </div>\n          )\n        })}\n        <h2>Project</h2>\n        <Project />\n      </Layout>\n    )\n  }\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      sort: { order: DESC, fields: [frontmatter___date] }\n      filter: { frontmatter: { categories: { regex: \"/.*路/\" } } }\n    ) {\n      edges {\n        node {\n          excerpt(pruneLength: 100)\n          fields {\n            slug\n          }\n          timeToRead\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            categories\n          }\n        }\n      }\n    }\n  }\n`\n","'use strict';\n// B.2.3.10 String.prototype.link(url)\nrequire('./_string-html')('link', function (createHTML) {\n  return function link(url) {\n    return createHTML(this, 'a', 'href', url);\n  };\n});\n"],"sourceRoot":""}